apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "updatemonitor.fullname" . }}-agent
  labels:
    {{- include "updatemonitor.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "updatemonitor.selectorLabels.agent" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "updatemonitor.selectorLabels.agent" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "updatemonitor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.agent.repository }}:{{ .Values.image.agent.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.agent.pullPolicy }}
          command: 
            {{- toYaml .Values.image.agent.command | nindent 12 }}
          args: 
            {{- toYaml .Values.image.agent.args | nindent 12 }}
          #command: 
          #  - "/usr/local/bin/updatemonitor"
          #args:
          #  - "agent"
          #  - "start"
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          env:
            - name: UPDATEMONITOR_DB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "updatemonitor.secretName" . }}-database
                  key: uri
          {{- range .Values.agents.environments }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  {{/* $ in the following statement is need to use the global scope instead of the local one created by the range instruction */}}
                  name: {{ include "updatemonitor.secretName" $ }}
                  key: {{ .name }}
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "config-volume" 
              mountPath: "/etc/updatemonitor/"
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "updatemonitor.configMapName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
