# Default values for updatemonitor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

agents:
  environments: []
#  environments:
#    - name: UPDATECLI_GITHUB_ACTOR
#      value: xxx
#    - name: UPDATECLI_GITHUB_TOKEN
#      value: yyy

image:
  agent:
    repository: ghcr.io/updatecli/updatemonitor
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.3.0"
    command: 
      - '/usr/local/bin/updatemonitor'
    args:
      - 'agent'
      - 'start'
      - '--debug'
  server:
    repository: ghcr.io/updatecli/updatemonitor
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.3.0"
    command:
      - '/usr/local/bin/updatemonitor'
    args:
      - 'server'
      - 'start'
      - '--debug'
  front:
    # repository: ghcr.io/updatecli/updatemonitor-front
    repository: ghcr.io/updatecli/updatemonitor-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.2.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


 # The name of the configMap used to store agent and server configuration file.
 # If not set, a name is generated using the fullname template
configMap:
  name: ""
  # Annotations to add to the configmap
  annotations: {}

 # The name of the secret used to store agent enviroment variables.
 # If not set, a name is generated using the fullname template
secret:
  name: ""
  # Annotations to add to the configmap
  annotations: {}
  #database:
  #  uri: mongodb://admin:password@updatemonitor-mongodb:27017

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: updatemonitor.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  server:
    readonly: true

# Install Mongodb
mongodb:
  enabled: false
  #auth:
  #  rootUser: admin
  #  rootPassword: password

service:
  type: ClusterIP
  port: 80

